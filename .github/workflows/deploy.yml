name: Deploy to DigitalOcean Droplet

on:
  push:
    branches: [main, master]
  pull_request:
    types: [opened, closed]
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/moodify:latest -f ./back-end/Dockerfile ./back-end
          docker push ${{ secrets.DOCKER_USERNAME }}/moodify:latest

      # Step 4: Sync changed files to the server using rsync
      - name: Sync changed files to server
        run: |
          rsync -avz --exclude '.git/' --exclude 'node_modules/' -e "ssh -i ~/.ssh/id_ed25519" ./ root@${{ secrets.DO_SERVER_IP }}:/root/project

      # Step 5: Deploy and restart Docker services on the server
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DO_SERVER_IP }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_PRIVATE_KEY }}
          script: |
            # Navigate to the project directory
            cd /root/project

            # Ensure the repository is clean and up to date
            git reset --hard
            git pull origin main

            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/moodify:latest

            # Stop and remove old containers
            docker stop flask-app || true
            docker rm flask-app || true

            # Remove any unused images and volumes
            docker system prune -af || true

            # Restart Docker services using docker-compose
            docker-compose -f /root/project/back-end/docker-compose.yml down || true
            docker-compose -f /root/project/back-end/docker-compose.yml up --build -d
